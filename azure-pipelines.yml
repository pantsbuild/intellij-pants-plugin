# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  batch: true
  branches:
    include:
      - '*'

jobs:
  - job: test_job
    timeoutInMinutes: 90

    pool:
      vmImage: 'ubuntu-latest'

    strategy:
      matrix:
        shard0:
          jdk_version: "1.8"
          python_version: "3.7"
          IJ_ULTIMATE: false
          PANTS_TEST_JUNIT_TEST_SHARD: 0/2
        shard1:
          jdk_version: "1.8"
          python_version: "3.7"
          IJ_ULTIMATE: false
          PANTS_TEST_JUNIT_TEST_SHARD: 1/2
        shard2:
          jdk_version: "1.8"
          python_version: "3.7"
          IJ_ULTIMATE: true
          TEST_SET: "jvm-integration"
        shard3:
          jdk_version: "1.8"
          python_version: "3.7"
          PANTS_SHA: "release_1.19.0"
          TEST_SET: "jvm-integration"
        shard4:
          jdk_version: "1.8"
          python_version: "3.7"
          PANTS_SHA: "release_1.18.0"
          TEST_SET: "jvm-integration"
        shard5:
          jdk_version: "1.8"
          python_version: "2.7.16"
          PANTS_SHA: "release_1.2.1"
          TEST_SET: "jvm-integration"

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python_version)'
          addToPath: true
      - script: |
          ./scripts/setup-ci-environment.sh
        displayName: 'Set up'
      - script: |
          ENABLE_SCALA_PLUGIN=false ./scripts/run-tests-ci.sh --test-junit-test=com.twitter.intellij.pants.integration.OSSPantsJavaExamplesIntegrationTest
          ./scripts/setup-ci-environment.sh && ./scripts/run-tests-ci.sh
        displayName: 'Run tests'
